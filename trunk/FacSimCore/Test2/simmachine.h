// Class automatically generated by Dev-C++ New Class wizard
#include "simpart.h"
#ifndef SIMMACHINE_H
#define SIMMACHINE_H

/*
 * 机器类：
 * 功能：拉取零件，并生成工艺要求的成品
 * 状态：1-闲；2-忙；3-阻；
 * ========事件：=======
 * 一、拉取零件［闲->忙］
 *      此时应该：          设置 状态为“忙”，计算加工时间，
 *                          设置事件［忙->阻］发生的时刻，
 *                          将事件添加进事件表。
 * 二、试推零件 ［忙->阻］，即加工完成，须将工件送出机器
        此时应该：          设置状态为“阻”，判断输出对象是否可用，
                                如果可用，设置输出事件［阻->闲］时刻为当前时刻 ；
                                如果不可用，则每当事件表有变化时，执行CheckDestinationAvailable动作，直到对象可用为止，
                                    将 输出零件事件［［阻->闲］］ 时刻为当前时刻 ；
                            将事件添加进事件表。(尽管是立即发生)；
    三、输出零件［阻->闲］： CheckSourceAvailable()//检查源头是否可用
                                    如果不可用，则只要事件表一有变化，则执行 CheckSourceAvailable()，直到源头可用为止，
                                    如果可用，则设置 状态为闲，
                                                将拉取零件 ［闲->忙］事件的时刻设为此刻， 并添加进事件表； 
 */
 
#define IDLE 0
#define BUSY 1
#define BLOCKED 2

typedef int STATE;
 
 
class simMachine :public simObject 
{
	public:
        
        STATE state;
        simPart *thePart; 
        simObject *theSource;//零件源
        simObject *theDestination;//零件渊 
        bool haveToResponseEventList; 
		// class constructor
		simMachine();
		// class destructor
		~simMachine();
		bool response(int eventTypeID);
		bool push();
        bool pull();
        bool block();
        bool check();
        double calcProcTime(int inType,int outType);
        bool setPartType();
};

#endif // SIMMACHINE_H
